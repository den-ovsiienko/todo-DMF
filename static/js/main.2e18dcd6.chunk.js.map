{"version":3,"sources":["redux/todo.js","components/DeleteModal.js","components/Navbar.js","components/SortDropDown.js","components/Todo.js","components/TodoList.js","components/AddChangeTodoForm.js","components/AddChangeTodoModal.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todoList","state","color","todos","id","title","description","dueDate","countId","reducers","add","action","at","payload","stateIndex","push","todo","undefined","remove","splice","index","changeState","parseInt","sourceStateIndex","sourceIndex","removed","destStateIndex","destIndex","current","reorderTodo","reorderTable","edit","sort","func","sortLabel","actions","toggleState","DeleteModal","props","isOpen","toggle","onClose","keyboard","backdrop","className","onClick","onDelete","filterOptions","label","filterType","disabled","isActive","TodoNavbar","filters","onChange","useState","filterOptionsOpen","setFilterOptionsOpen","activeFiltersOpen","setActiveFiltersOpen","option","setOption","onInputChange","value","fixed","sticky","light","caret","map","type","e","target","counter","key","getActiveFiltersNum","filter","sortOptions","a","b","localeCompare","Date","parse","SortDropDown","onSort","open","setOpen","toggleOpen","size","container","dateNow","setHours","setDate","getDate","Todo","tableIndex","table","onEdit","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","fluid","pill","format","toggler","TodoList","onStateChange","onAdd","droppableId","isDraggingOver","droppableProps","moment","toLowerCase","includes","placeholder","AddChangeTodoForm","setTitle","setDescription","setDueDate","form","for","valid","invalid","AddChangeTodoModal","data","showAlert","setShowAlert","App","useSelector","dispatch","useDispatch","setFilters","handleDeleteModalClose","setDeleteProps","deleteProps","handleAddModalClose","setAddProps","addProps","onDragEnd","result","source","destination","direction","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2e18dcd6.chunk.js","sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    todoList: [\n      {\n        state: 'TODO',\n        color: 'danger',\n        todos: [\n          {\n            id: '1',\n            title: 'Create TODO App',\n            description: 'Create a SPA for DiscoverMyFranchise.',\n            dueDate: '2021-10-31'\n          },\n          {\n            id: '2',\n            title: 'Shopping',\n            description: 'Drive to Nesters to buy food.',\n            dueDate: '2021-11-5'\n          },\n        ]\n      },\n      {\n        state: 'In Progress',\n        color: 'warning',\n        todos: [\n          {\n            id: '3',\n            title: 'Improve TODO App',\n            description: 'Create a SPA for DiscoverMyFranchise.',\n            dueDate: '2021-10-31'\n          },\n        ]\n      },\n      {\n        state: 'Done',\n        color: 'success',\n        todos: [\n          {\n            id: '4',\n            title: 'Done TODO App',\n            description: 'Create a SPA for DiscoverMyFranchise.',\n            dueDate: '2021-10-31'\n          }\n        ]\n      },\n    ],\n    countId: 4\n  },\n  reducers: {\n    add: (state, action) => {\n      state.countId++;\n      state.todoList.at(action.payload.stateIndex).todos.push({...action.payload.todo, id: '' + state.countId});\n      state.todoList.at(action.payload.stateIndex)['sortLabel'] = undefined;\n    },\n    remove: (state, action) => {\n      state.todoList.at(action.payload.stateIndex).todos.splice(action.payload.index, 1);\n    },\n    changeState: (state, action) => {\n      const [removed] = state.todoList.at(parseInt(action.payload.sourceStateIndex)).todos.splice(action.payload.sourceIndex, 1);\n      state.todoList.at(parseInt(action.payload.destStateIndex)).todos.splice(action.payload.destIndex, 0, current(removed));\n      state.todoList.at(action.payload.destStateIndex)['sortLabel'] = undefined;\n    },\n    reorderTodo: (state, action) => {\n      const [removed] = state.todoList.at(parseInt(action.payload.stateIndex)).todos.splice(action.payload.sourceIndex, 1);\n      state.todoList.at(parseInt(action.payload.stateIndex)).todos.splice(action.payload.destIndex, 0, current(removed));\n      state.todoList.at(action.payload.stateIndex)['sortLabel'] = undefined;\n    },\n    reorderTable: (state, action) => {\n      const [removed] = state.todoList.splice(action.payload.sourceIndex, 1);\n      state.todoList.splice(action.payload.destIndex, 0, current(removed));\n    },\n    edit: (state, action) => {\n      state.todoList[action.payload.stateIndex].todos[action.payload.index] = action.payload.todo;\n      state.todoList.at(action.payload.stateIndex)['sortLabel'] = undefined;\n    },\n    sort: (state, action) => {\n      state.todoList.at(action.payload.index).todos.sort(action.payload.func)\n      state.todoList.at(action.payload.index)['sortLabel'] = action.payload.sortLabel;\n    }\n  },\n})\n\nexport const { add, remove, toggleState, changeState, reorderTodo, reorderTable, edit, sort} = todoSlice.actions\n\nexport default todoSlice.reducer","import React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst DeleteModal = ({props}) => {\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      toggle={props.onClose}\n      keyboard={false}\n      backdrop='static'\n    >\n      <ModalHeader toggle={props.onClose}>\n        Delete TODO\n      </ModalHeader>\n      <ModalBody>\n        <p>Do you want to delete <span className='text-primary'>{props.todo ? props.todo.title : ''}</span>?</p>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='secondary' onClick={props.onClose}>Close</Button>\n        <Button color='danger' onClick={() => props.onDelete(props.stateIndex, props.index)}>Delete</Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default DeleteModal\n","import React, { useState } from 'react'\nimport {Navbar, NavbarBrand, Nav, NavItem, Input, InputGroup, Dropdown, DropdownToggle, DropdownItem, DropdownMenu} from 'reactstrap';\n\nconst filterOptions = [\n  {\n    label: 'None',\n    filterType: '',\n    disabled: true,\n    isActive: false\n  },\n  {\n    label: 'Table',\n    filterType: 'state',\n    disabled: false,\n    isActive: false\n  },\n  {\n    label: 'Title',\n    filterType: 'title',\n    disabled: false,\n    isActive: false\n  },\n  {\n    label: 'ID',\n    filterType: 'id',\n    disabled: false,\n    isActive: false\n  },\n  {\n    label: 'Due Date',\n    filterType: 'dueDate',\n    disabled: false,\n    isActive: false\n  },\n]\n\nconst TodoNavbar = ({filters, onChange}) => {\n  const [filterOptionsOpen, setFilterOptionsOpen] = useState(false);\n  const [activeFiltersOpen, setActiveFiltersOpen] = useState(false)\n  const [option, setOption] = useState(filterOptions[0])\n\n  const toggleFilterOptionsOpen = () => setFilterOptionsOpen(!filterOptionsOpen);\n  const toggleActiveFiltersOpen = () => setActiveFiltersOpen(!activeFiltersOpen);\n\n  const getActiveFiltersNum = () => {\n    var counter = 0;\n    for(var key in filters) {\n      if(filters[key] !== '') {\n        counter++\n      }\n    }\n    return counter;\n  }\n\n  const onInputChange = (filterType, value) => {\n    option.isActive = value === '' ? false : true;\n    onChange(filterType, value)\n  }\n\n  return (\n    <Navbar\n        color='light'\n        fixed='top'\n        sticky='true'\n        light\n        className='mb-xs-3'\n      >\n        <NavbarBrand>\n          <i className=\"bi bi-check2-square me-2\"></i>\n          Your TODO's\n        </NavbarBrand>\n        <Nav>\n          <NavItem>\n            <InputGroup>\n              <Dropdown toggle={toggleFilterOptionsOpen} isOpen={filterOptionsOpen}>\n                <DropdownToggle className='rounded-end-0' caret>\n                  {option.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {filterOptions.map((option) => (\n                    <DropdownItem key={option.label} onClick={() => setOption(option)}>\n                      {option.label}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown> \n              <Input \n                id='filter'\n                name='filter'\n                type='search'\n                value={filters[option.filterType]}\n                disabled={option.disabled}\n                onChange={(e) => onInputChange(option.filterType, e.target.value)}\n              />\n              <Dropdown toggle={toggleActiveFiltersOpen} isOpen={activeFiltersOpen}>\n                <DropdownToggle color='warning' caret>\n                  {getActiveFiltersNum()}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {filterOptions.map((filter) => {\n                    if(!filter.isActive) return null;\n                    return <DropdownItem key={filter.filterType}>\n                      {`${filter.label}`}\n                    </DropdownItem>\n                  })}\n                </DropdownMenu>\n              </Dropdown> \n            </InputGroup>\n          </NavItem>\n        </Nav>\n      </Navbar>\n  )\n}\n\nexport default TodoNavbar\n","import React, { useState } from 'react'\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'\n\nconst sortOptions = [\n  {\n    label: 'ID (1-9)',\n    func: (a, b) => a.id - b.id,\n  },\n  {\n    label: 'ID (9-1)',\n    func: (a, b) => b.id - a.id,\n  },\n  {\n    label: 'Title (A-Z)',\n    func: (a, b) => ('' + a.title).localeCompare(b.title)\n  },\n  {\n    label: 'Title (Z-A)',\n    func: (a, b) => ('' + b.title).localeCompare(a.title)\n  },\n  {\n    label: 'Date (past - future)',\n    func: (a, b) => Date.parse(a.dueDate) - Date.parse(b.dueDate)\n  },\n  {\n    label: 'Date (future - past)',\n    func: (a, b) => Date.parse(b.dueDate) - Date.parse(a.dueDate)\n  }\n]\n\nconst SortDropDown = ({onSort, index}) => {\n  const [open, setOpen] = useState(false)\n\n  const toggleOpen = () => setOpen(!open)\n\n  return (\n    <Dropdown toggle={toggleOpen} isOpen={open} size='sm' className='d-inline-block me-2'>\n      <DropdownToggle color='secondary' className='rounded rounded-circle mt-1' onClick={toggleOpen}>\n        <i className=\"bi bi-filter\"></i>\n      </DropdownToggle>\n      <DropdownMenu container=\"body\">\n        {sortOptions.map((option) => (\n          <DropdownItem key={option.label} onClick={() => onSort({\n            index: index,\n            func: option.func,\n            sortLabel: option.label\n          })}>\n            {option.label}\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default SortDropDown\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Container, Button, Badge, UncontrolledCollapse } from 'reactstrap';\nimport Moment from 'react-moment';\n\nconst dateNow = new Date()\ndateNow.setHours(0, 0, 0, 0)\ndateNow.setDate(dateNow.getDate() - 1);\n\nconst Todo = ({todo, index, tableIndex, table, onEdit, onDelete}) => {\n  return (\n    <Draggable\n      key={todo.id}\n      draggableId={`${todo.id}`}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Container\n            fluid \n            className={`bg-light p-3 rounded shadow mt-3`}\n            >\n            <div className='d-flex justify-content-between'>\n              <p className='fs-5'>\n                {`${todo.id}. ${todo.title}`}\n                <Badge\n                  pill \n                  color={table.color} \n                  className='ms-1 ms-sm-2'\n                >\n                  {table.state}\n                </Badge>\n              </p>\n              <div>\n                <Button size='sm' color='warning' className='rounded-circle me-2' onClick={() => onEdit(tableIndex, table, index)}>\n                  <i className=\"bi bi-pencil-fill\"></i>\n                </Button>\n                <Button size='sm' color='danger' className='rounded-circle' onClick={() => onDelete(todo, tableIndex, index)}>\n                  <i className=\"bi bi-trash-fill\"></i>\n                </Button>\n                <Button size='sm' disabled color='none' className='rounded-circle ms-1 position-relative top-50'>\n                  <i className=\"bi bi-grip-vertical\"></i>\n                </Button>\n              </div>\n            </div>\n            <Button id={`toggler${todo.id}`} size='sm' color='none' className='rounded-circle'>\n              <i className={`bi bi-caret-down-fill`}></i>\n            </Button>\n            <Moment format='MMM D, YYYY' className='ms-2'>\n              {todo.dueDate}\n            </Moment>\n            {dateNow > Date.parse(todo.dueDate) && table.state !== 'Done' &&\n              <Badge color='danger' className='ms-2'>Overdue</Badge>\n            }\n            <UncontrolledCollapse toggler={`toggler${todo.id}`}>\n              <p className={`border-top border-${table.color} mt-2 pt-2 ms-0 me-3 mb-0 text-break fst-italic`}>{todo.description}</p>\n            </UncontrolledCollapse>\n          </Container>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Todo\n","import React from 'react'\nimport { Row, Button } from 'reactstrap';\nimport { Droppable } from 'react-beautiful-dnd';\nimport SortDropDown from './SortDropDown';\nimport Todo from './Todo';\nimport moment from 'moment';\n\n\nconst TodoList = ({ table, tableIndex, onStateChange, onDelete, onAdd, onEdit, onSort, filters }) => {\n  return (\n    <>\n      <div className={`bg-light d-flex justify-content-between mt-3 p-3 border border-3 border-start-0 border-end-0 border-top-0 border-${table.color}`}>\n        <p className={`text-${table.color} m-0 fs-4`}>{table.state}</p>\n        <div>\n          {table.sortLabel && \n            <p className='d-inline-block text-primary m-0 me-2 p-0'>{table.sortLabel}</p>\n          }\n          <SortDropDown onSort={onSort} index={tableIndex}/>\n          <Button\n            size='sm' \n            color={table.color} \n            className='rounded-circle mt-1'\n            onClick={() => onAdd(tableIndex, table)}\n          >\n              <i className=\"bi bi-plus-lg\"></i>\n          </Button>\n          <Button size='sm' disabled color='none' className='rounded-circle mt-1 ms-1'>\n            <i className=\"bi bi-grip-vertical\"></i>\n          </Button>\n        </div>\n      </div>\n      <Droppable key={tableIndex} droppableId={`${tableIndex}`} type='TODO'>\n        {(provided, snapshot) => (\n          <div \n          className={`bg-${table.color} ${snapshot.isDraggingOver ? 'bg-opacity-50' : 'bg-opacity-25'} p-2`}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {\n            table.todos.map((todo, index) => {\n              for(var key in todo) {\n                if(key === 'dueDate' \n                  && !moment(todo[key]).format('MMM D, YYYY').toLowerCase().includes(filters[key].toLowerCase())) {\n                    return null\n                } else if (key !== 'dueDate' && !todo[key].toLowerCase().includes(filters[key].toLowerCase())) \n                    return null\n              }\n              return(\n                <Row key={todo.id}>\n                  <Todo \n                    todo={todo} \n                    index={index} \n                    tableIndex={tableIndex}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                    onStateChange={onStateChange} \n                    table={table}\n                  />\n                </Row>\n              )}\n            )\n          }\n          {provided.placeholder}\n        </div>\n        )}\n      </Droppable>\n    </>\n  )\n}\n\nexport default TodoList\n","import { Form, Input, Row, FormGroup, Label } from 'reactstrap';\n\nconst AddChangeTodoForm = ({title, description, state, dueDate, setTitle, setDescription, setDueDate}) => {\n\n  return (\n    <Form>\n      <Row form>\n        <FormGroup>\n          <Label for='title'>Title</Label>\n          <Input\n            id='title'\n            name='title'\n            placeholder={`My TODO's title`}\n            type='text'\n            valid={title !== ''}\n            invalid={title === ''}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </FormGroup>\n      </Row>\n      <Row form>\n        <FormGroup>\n          <Label for='description'>Description (Optional)</Label>\n          <Input\n            id='description'\n            name='description'\n            placeholder={`My TODO's description (Optional)`}\n            type='textarea'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </FormGroup>\n      </Row>\n      <Row form>\n        <FormGroup>\n          <Label for='state'>State</Label>\n          <Input\n            disabled\n            id='state'\n            name='state'\n            type='text'\n            className={state ? `bg-${state.color} text-light` : ''}\n            value={state ? state.state : ''}\n          />\n        </FormGroup>\n      </Row>\n      <Row form>\n        <FormGroup>\n          <Label for='date'>Due Date</Label>\n          <Input\n            id='date'\n            name='date'\n            type='date'\n            value={dueDate}\n            valid={dueDate !== ''}\n            invalid={dueDate === ''}\n            onChange={(e) => setDueDate(e.target.value)}\n          />\n        </FormGroup>\n      </Row>\n    </Form>\n  )\n}\n\nexport default AddChangeTodoForm\n","import { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter , UncontrolledAlert} from 'reactstrap';\nimport AddChangeTodoForm from './AddChangeTodoForm';\n\nconst AddChangeTodoModal = ({props}) => {\n\n  const [title, setTitle] = useState(props.data ? props.data.title : '');\n  const [description, setDescription] = useState(props.data ? props.data.description : '')\n  const [dueDate, setDueDate] = useState(props.data ? props.data.dueDate : '');\n  const [showAlert, setShowAlert] = useState(false)\n\n  const onTodoAdd = () => {\n    if(title === '' || dueDate === '') {\n      setShowAlert(true);\n      return;\n    }\n    if(props.data) {\n      props.onEdit(props.stateIndex, props.index, title, description, dueDate, props.data.id);\n      props.data = null\n    } else {\n      props.onAdd(props.stateIndex, title, description, dueDate);\n    }\n    setTitle('');\n    setDescription('');\n    setDueDate('');\n    props.onClose();\n  }\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      toggle={props.onClose}\n      keyboard={false}\n      backdrop='static'\n    >\n      <ModalHeader toggle={props.onClose}>\n        {props.data ? 'Edit TODO' : 'Add TODO'}\n      </ModalHeader>\n      <ModalBody>\n        {showAlert &&\n          <UncontrolledAlert\n            color=\"warning\"\n          >\n            Some of the required fields are empty. ;(\n          </UncontrolledAlert>\n        }\n        <AddChangeTodoForm\n          title={title}\n          description={description}\n          dueDate={dueDate}\n          setTitle={setTitle}\n          setDescription={setDescription}\n          setDueDate={setDueDate}\n          state={props.state}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color='secondary' onClick={props.onClose}>Close</Button>\n        <Button color={props.data ? 'warning' : 'success'} onClick={onTodoAdd}>{props.data ? 'Edit' : 'Add'}</Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default AddChangeTodoModal\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { add, remove, toggleState, changeState, reorderTodo, reorderTable, edit, sort } from './redux/todo'\nimport DeleteModal from './components/DeleteModal';\nimport TodoNavbar from './components/Navbar'\nimport { Container } from 'reactstrap';\nimport TodoList from './components/TodoList';\nimport AddChangeTodoModal from './components/AddChangeTodoModal';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\nconst App = () => {\n  const { todoList } = useSelector(state => state.todo);\n  const dispatch = useDispatch();\n\n  const [filters, setFilters] = useState({\n    state: '',\n    title: '',\n    id: '',\n    dueDate: '',\n    description: ''\n  });\n\n  const handleDeleteModalClose = () => setDeleteProps({...deleteProps, isOpen: false});\n  const handleAddModalClose = () => setAddProps({...addProps, isOpen: false});\n\n  const deleteTodo = (stateIndex, index) => {\n    dispatch(remove({\n      stateIndex: stateIndex,\n      index: index\n    }));\n    handleDeleteModalClose();\n  }\n\n  const onFilterChange = (type, value) => {\n    setFilters({\n      ...filters,\n      [type] : value\n    })\n  }\n\n  const editTodo = (stateIndex, index, title, description, dueDate, id) => {\n    dispatch(edit({\n      stateIndex: stateIndex,\n      index: index,\n      todo: {\n        title: title,\n        description: description,\n        dueDate: dueDate,\n        id: id\n      }\n    }));\n  }\n\n  const addTodo = (stateIndex, title, description, dueDate) => {\n    dispatch(add({\n      stateIndex: stateIndex,\n      todo: {\n        title: title,\n        description: description,\n        dueDate: dueDate,\n      }\n    }));\n    handleAddModalClose();\n  }\n\n  const [addProps, setAddProps] = useState({\n    isOpen: false,\n    onClose: handleAddModalClose,\n    onAdd: addTodo,\n    onEdit: editTodo\n  });\n\n  const [deleteProps, setDeleteProps] = useState({\n    isOpen: false,\n    onClose: handleDeleteModalClose,\n    onDelete: deleteTodo,\n  });\n\n  const onStateChange = (todo) => dispatch(toggleState(todo.id));\n\n  const onAdd = (stateIndex, state) => setAddProps({\n    ...addProps, \n    isOpen: true, \n    stateIndex: stateIndex, \n    state: state,\n  });\n\n  const onEdit = (stateIndex, state, index) => {\n    const todo = todoList.at(stateIndex).todos.at(index)\n    setAddProps({\n      ...addProps, \n      isOpen: true, \n      stateIndex: stateIndex, \n      state: state,\n      index: index,\n      data: todo\n    });\n  }\n\n  const onDelete = (todo, stateIndex, index) => \n    setDeleteProps({\n      ...deleteProps, \n      isOpen: true, \n      todo: todo,\n      stateIndex: stateIndex,\n      index: index\n    });\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    if(!destination) return;\n\n    if(destination.droppableId === source.droppableId \n      && destination.index === source.index) return;\n\n    if(result.type === 'TABLE') {\n      dispatch(reorderTable({\n        sourceIndex: source.index,\n        destIndex: destination.index\n      }))\n      return\n    }\n\n    if(source.droppableId !== destination.droppableId) {\n      dispatch(changeState({\n        sourceStateIndex: source.droppableId,\n        sourceIndex: source.index,\n        destStateIndex: destination.droppableId,\n        destIndex: destination.index, \n      }));\n    } else {\n      dispatch(reorderTodo({\n        sourceIndex: source.index,\n        destIndex: destination.index,\n        stateIndex: source.droppableId\n      }))\n    }\n  }\n\n  const onSort = ({index, func, sortLabel}) => dispatch(sort({\n    index: index,\n    func: func,\n    sortLabel: sortLabel\n  }));\n\n  return (\n    <>\n      {deleteProps.isOpen && <DeleteModal props={deleteProps} />}\n      {addProps.isOpen && <AddChangeTodoModal props={addProps} />}\n      <TodoNavbar filters={filters} onChange={onFilterChange}/>\n\n      <Container fluid>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable direction='horizontal' droppableId='tables' type='TABLE'>\n            {(provided, snapshot) => (\n              <div\n                className='row'\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n              {\n                todoList.map((table, index) => {\n                  if (!table.state.toLowerCase().includes(filters.state.toLowerCase())) return null;\n                  return <Draggable\n                    key={`table-${index}`}\n                    draggableId={`table-${index}`}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                      className='col-12 col-md-6 col-xl-4' \n                      key={index}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      >\n                        <TodoList\n                          table={table}\n                          tableIndex={index}\n                          onStateChange={onStateChange}\n                          onDelete={onDelete}\n                          onAdd={onAdd}\n                          onEdit={onEdit}\n                          onSort={onSort}\n                          filters={filters}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                })\n              }\n              {provided.placeholder}\n            </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n      </Container>\n    </>\n  );\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from './todo'\n\nexport default configureStore({\n  reducer: {\n    todo: todoReducer,\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}